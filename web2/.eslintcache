[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/App/index.tsx":"2","/usr/src/app/src/App/components/RouterProviderFactory.tsx":"3","/usr/src/app/src/App/components/ApolloProviderFactory.tsx":"4","/usr/src/app/src/App/components/ThemeProviderFactory/index.tsx":"5","/usr/src/app/src/Modules/CreditBooklets/index.tsx":"6","/usr/src/app/src/Modules/PaymentMethods/index.tsx":"7","/usr/src/app/src/Modules/Dashboard/index.tsx":"8","/usr/src/app/src/Modules/Budgets/index.tsx":"9","/usr/src/app/src/App/components/ThemeProviderFactory/style/theme.ts":"10","/usr/src/app/src/App/components/ThemeProviderFactory/style/global.ts":"11","/usr/src/app/src/Modules/Customers/index.tsx":"12","/usr/src/app/src/Modules/Stock/index.tsx":"13","/usr/src/app/src/Modules/Customers/querys.ts":"14","/usr/src/app/src/Modules/Customers/components/MdCustomers.tsx":"15","/usr/src/app/src/Modules/Customers/components/CustomersTable.tsx":"16","/usr/src/app/src/Layouts/Private/index.tsx":"17","/usr/src/app/src/Modules/Customers/styles.ts":"18","/usr/src/app/src/Layouts/Private/style.ts":"19","/usr/src/app/src/Layouts/Private/components/MappedMenu.tsx":"20","/usr/src/app/src/Configs/mapped-menu.ts":"21"},{"size":169,"mtime":1606757928083,"results":"22","hashOfConfig":"23"},{"size":498,"mtime":1606757917231,"results":"24","hashOfConfig":"23"},{"size":1169,"mtime":1606757435093,"results":"25","hashOfConfig":"23"},{"size":408,"mtime":1606757431222,"results":"26","hashOfConfig":"23"},{"size":425,"mtime":1606757886737,"results":"27","hashOfConfig":"23"},{"size":316,"mtime":1606748890818,"results":"28","hashOfConfig":"23"},{"size":327,"mtime":1606748850625,"results":"29","hashOfConfig":"23"},{"size":301,"mtime":1607015754415,"results":"30","hashOfConfig":"23"},{"size":302,"mtime":1606748780145,"results":"31","hashOfConfig":"23"},{"size":154,"mtime":1606502775309,"results":"32","hashOfConfig":"23"},{"size":4260,"mtime":1606851493681,"results":"33","hashOfConfig":"23"},{"size":1253,"mtime":1606939409098,"results":"34","hashOfConfig":"23"},{"size":309,"mtime":1606748872755,"results":"35","hashOfConfig":"23"},{"size":1273,"mtime":1606763372958,"results":"36","hashOfConfig":"23"},{"size":6217,"mtime":1606939223348,"results":"37","hashOfConfig":"23"},{"size":2304,"mtime":1606845065467,"results":"38","hashOfConfig":"23"},{"size":2157,"mtime":1606850190047,"results":"39","hashOfConfig":"23"},{"size":687,"mtime":1606763844687,"results":"40","hashOfConfig":"23"},{"size":1424,"mtime":1606850400788,"results":"41","hashOfConfig":"23"},{"size":1438,"mtime":1606749942465,"results":"42","hashOfConfig":"23"},{"size":945,"mtime":1606748548286,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"lsy7e9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/usr/src/app/src/index.tsx",[],[],"/usr/src/app/src/App/index.tsx",[],"/usr/src/app/src/App/components/RouterProviderFactory.tsx",[],"/usr/src/app/src/App/components/ApolloProviderFactory.tsx",[],"/usr/src/app/src/App/components/ThemeProviderFactory/index.tsx",[],"/usr/src/app/src/Modules/CreditBooklets/index.tsx",[],"/usr/src/app/src/Modules/PaymentMethods/index.tsx",[],"/usr/src/app/src/Modules/Dashboard/index.tsx",[],"/usr/src/app/src/Modules/Budgets/index.tsx",[],"/usr/src/app/src/App/components/ThemeProviderFactory/style/theme.ts",[],"/usr/src/app/src/App/components/ThemeProviderFactory/style/global.ts",[],"/usr/src/app/src/Modules/Customers/index.tsx",[],"/usr/src/app/src/Modules/Stock/index.tsx",[],"/usr/src/app/src/Modules/Customers/querys.ts",[],"/usr/src/app/src/Modules/Customers/components/MdCustomers.tsx",["88"],"import React, {\r\n    ChangeEvent,\r\n    forwardRef,\r\n    ForwardRefRenderFunction,\r\n    RefObject,\r\n    useCallback,\r\n    useImperativeHandle,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\n\r\nimport {Col, Divider, Form, Input, Modal, Row} from 'antd'\r\n\r\nimport MaskedInput from 'antd-mask-input'\r\nimport {Customer} from 'Types'\r\nimport {useMutation} from 'react-apollo'\r\nimport {CREATE_CUSTOMER} from '../querys'\r\n\r\nexport type ModalHandles = {\r\n    openModal: () => void\r\n}\r\ntype Props = {\r\n    updateData: () => void\r\n}\r\n\r\nconst MdCustomers: ForwardRefRenderFunction<ModalHandles, Props> = (\r\n    {updateData},\r\n    ref,\r\n) => {\r\n    const [form] = Form.useForm()\r\n    const [modalStatus, setStatusModal] = useState(false)\r\n    const [disable, setDisable] = useState(true)\r\n\r\n    const cidade = useRef() as RefObject<Input>\r\n    const numero = useRef() as RefObject<Input>\r\n\r\n    const [createCustomer, {loading}] = useMutation<Partial<Customer>>(\r\n        CREATE_CUSTOMER,\r\n    )\r\n\r\n    const openModal = useCallback(() => {\r\n        setStatusModal(true)\r\n    }, [])\r\n    const closeModal = useCallback(() => {\r\n        setStatusModal(false)\r\n    }, [])\r\n\r\n    const modalClienOkButton = useCallback(() => {\r\n        form.submit()\r\n    }, [form])\r\n\r\n    const savaData = useCallback(\r\n        async (variables: Partial<Customer>) => {\r\n            await createCustomer({variables})\r\n            form.resetFields()\r\n            updateData()\r\n            closeModal()\r\n        },\r\n        [form],\r\n    )\r\n\r\n    const typingCep = async (ev: ChangeEvent<HTMLInputElement>) => {\r\n        const {value} = ev.target\r\n        const transformedValue = value.replace(/-|_/gi, '')\r\n\r\n        if (transformedValue.length < 8) return false\r\n\r\n        try {\r\n            // form.setFieldsValue(resetAddress)\r\n            setDisable(true)\r\n            const req = await fetch(\r\n                `https://viacep.com.br/ws/${transformedValue}/json/`,\r\n            )\r\n            const data = await req.json()\r\n            if (data.erro) throw new Error()\r\n            form.setFieldsValue(data)\r\n            numero.current?.focus()\r\n        } catch (error) {\r\n            console.log(error)\r\n            setDisable(false)\r\n            cidade.current?.focus()\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({openModal}))\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Gerenciar Cliente\"\r\n            visible={modalStatus}\r\n            okText=\"Salvar\"\r\n            onOk={modalClienOkButton}\r\n            confirmLoading={loading}\r\n            cancelText=\"Cancelar\"\r\n            onCancel={closeModal}\r\n            width=\"800px\"\r\n            maskClosable={false}>\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                onFinish={savaData}\r\n                // initialValues={defaulCustomer}\r\n            >\r\n                <Row gutter={16}>\r\n                    <Col span={24}>\r\n                        <Form.Item name=\"nome\" label=\"Nome completo\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"CPF\" name=\"cpf\">\r\n                            <MaskedInput mask=\"111.111.111-11\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Telefone\" name=\"telefone\">\r\n                            <MaskedInput mask=\"(11) 1111-1111\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Celular\" name=\"celular\">\r\n                            <MaskedInput mask=\"(11) 11111-1111\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Email\" name=\"email\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Divider orientation=\"left\"></Divider>\r\n\r\n                <Row gutter={16}>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"CEP\" name=\"cep\">\r\n                            <MaskedInput\r\n                                mask=\"11111-111\"\r\n                                onChange={typingCep}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={16}>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Cidade\" name=\"localidade\">\r\n                            <Input ref={cidade} disabled={disable} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Estado\" name=\"uf\">\r\n                            <Input disabled={disable} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={10}>\r\n                        <Form.Item label=\"Rua\" name=\"logradouro\">\r\n                            <Input disabled={disable} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={10}>\r\n                        <Form.Item label=\"Bairro\" name=\"bairro\">\r\n                            <Input disabled={disable} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <Form.Item label=\"Número\" name=\"numero\">\r\n                            <Input ref={numero} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Complemento\" name=\"complemento\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Referencia\" name=\"referencia\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default forwardRef(MdCustomers)\r\n","/usr/src/app/src/Modules/Customers/components/CustomersTable.tsx",[],"/usr/src/app/src/Layouts/Private/index.tsx",[],"/usr/src/app/src/Modules/Customers/styles.ts",[],"/usr/src/app/src/Layouts/Private/style.ts",[],"/usr/src/app/src/Layouts/Private/components/MappedMenu.tsx",[],"/usr/src/app/src/Configs/mapped-menu.ts",[],{"ruleId":"89","severity":1,"message":"90","line":59,"column":9,"nodeType":"91","endLine":59,"endColumn":15,"suggestions":"92"},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'closeModal', 'createCustomer', and 'updateData'. Either include them or remove the dependency array. If 'updateData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["93"],{"desc":"94","fix":"95"},"Update the dependencies array to be: [closeModal, createCustomer, form, updateData]",{"range":"96","text":"97"},[1487,1493],"[closeModal, createCustomer, form, updateData]"]